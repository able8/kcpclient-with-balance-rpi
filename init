#!/usr/bin/python
import json
from subprocess import call
import shlex

path = "/home/kcpclient/"
config_file = path + "config.json"
kcp_max_number = 5

# generate a kcp command
def kcp_command_generater(kcp_config):
	kcp_cmd = "client_linux_arm7 -r " + kcp_config["server_address"] + ":" + kcp_config["server_port"] + " -l :" + kcp_config["port"] + " -mode " + kcp_config["mode"] + " --key " + kcp_config["password"]

	if "others" in kcp_config:
		kcp_cmd = kcp_cmd + " " + kcp_config["others"] 
	kcp_cmd = kcp_cmd + " &"
		
	return kcp_cmd

def command_generater(_config, _n):
	commandlist = {}
	pen_command = ""

	# generate pen command
	pen_command = "pen -f -r -x " + _config["pen"]["max_connection"] + " 127.0.0.1:" + _config["pen"]["port"]
       
	# generate kcp commands
	i=1
	while (i <= _n):
		kcp_name = "kcp" + str(i)
		if kcp_name in _config:
			commandlist[kcp_name] = kcp_command_generater(_config[kcp_name])
			# add kcp ports in pen command
			pen_command = pen_command + " 127.0.0.1:" + _config[kcp_name]["port"]
		i = i + 1

        commandlist["pen"] = pen_command + " &"
	return commandlist

def command_runner(_commandlist):
    # TODO
    for key in _commandlist:
      print "calling " + key
      call(_commandlist[key], shell=True) 

def init(_file, _num):

	config = json.loads(open(_file).read())

	# generate commands
	command_list = command_generater(config, _num)

        # run commands
	command_runner(command_list)

init(config_file, kcp_max_number)
